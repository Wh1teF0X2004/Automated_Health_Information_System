{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/database.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../../pipes/date-format.pipe\";\nimport * as i5 from \"../../../pipes/date-time-format.pipe\";\nfunction ViewDiagnosisComponent_tr_39_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ViewDiagnosisComponent_tr_39_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const prescription_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.viewSelectedPrescription(prescription_r1.prescription_id));\n    });\n    i0.ɵɵtext(7, \"View\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const prescription_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(prescription_r1.prescription_id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", prescription_r1.prescription_name, \" \");\n  }\n}\nexport let ViewDiagnosisComponent = /*#__PURE__*/(() => {\n  class ViewDiagnosisComponent {\n    /**\n     * @constructor The constructor of this component has three dependencies: the DatabaseService, the ActivatedRoute, and the Router\n     * @param dbService Service used to fetch and manage data from the database\n     * @param router Service used for navigation between components/pages\n     * @param route Provides information about the current route in the application\n     */\n    constructor(dbService, router, route) {\n      this.dbService = dbService;\n      this.router = router;\n      this.route = route;\n      this.consultationDB = [];\n      this.diagnosisDB = [];\n      this.diagnosisId = \"\";\n      this.aDiagnosis = {};\n      this.aConsultation = {};\n      this.physicianDB = [];\n      this.aPhysician = {};\n      this.patientDB = [];\n      this.aPatient = {};\n    }\n    /**\n     * @function ngOnInit runs when the component is initiated\n     * @description calls various methods to fetch and set the diagnosis, patient, consultation, and physician records\n     */\n    ngOnInit() {\n      this.getDiagnosisId();\n      this.getDiagnosisRecord();\n      this.getPatientRecord();\n      this.getPhysicianRecord();\n      this.getConsultationRecord();\n    }\n    /**\n     * @function getDiagnosisId Retrieves the diagnosis ID from the URL parameters and stores it in the component\n     * @description Retrieves the diagnosis ID from the URL parameters and stores it in the component\n     */\n    getDiagnosisId() {\n      this.route.paramMap.subscribe(params => {\n        this.diagnosisId = params.get('diagnosisId');\n        console.log(\"Get diagnosis ID: \", this.diagnosisId);\n      });\n    }\n    /**\n     * @function getDiagnosisRecord Fetches all diagnosis records from the database and matches the current diagnosis ID to extract the specific diagnosis\n     * @description Fetches all diagnosis records from the database and matches the current diagnosis ID to extract the specific diagnosis\n     */\n    getDiagnosisRecord() {\n      this.dbService.getDiagnosis().subscribe(diagnosisDB => {\n        console.log(\"Get diagnosis Id record\", this.diagnosisId);\n        for (let diagnosis of diagnosisDB) {\n          if (diagnosis.diagnosisId === this.diagnosisId) {\n            this.aDiagnosis = diagnosis;\n            console.log(\"consultation Record\", this.aDiagnosis);\n          }\n        }\n      });\n    }\n    /**\n     * @function getConsultationRecord Fetches all consultation records from the database and matches the consultation ID from the diagnosis record\n     * @description Fetches all consultation records from the database and matches the consultation ID from the diagnosis record\n     */\n    getConsultationRecord() {\n      this.dbService.getConsultations().subscribe(consultationDB => {\n        console.log(\"Get consultation Id record\", this.aDiagnosis.consultationId);\n        for (let consultation of consultationDB) {\n          if (consultation.consultationId === this.aDiagnosis.consultationId) {\n            this.aConsultation = consultation;\n            console.log(\"consultation Record\", this.aConsultation);\n          }\n        }\n      });\n    }\n    /**\n     * @function getPatientRecord Fetches all patient records from the database and matches the patient ID from the diagnosis record\n     * @description Fetches all patient records from the database and matches the patient ID from the diagnosis record\n     */\n    getPatientRecord() {\n      this.dbService.getPatients().subscribe(patientDB => {\n        console.log(\"Get Patient Id record\", this.aDiagnosis.patientId);\n        for (let patient of patientDB) {\n          if (patient.patientId === this.aDiagnosis.patientId) {\n            this.aPatient = patient;\n            console.log(\"Patient Record\", this.aPatient);\n          }\n        }\n      });\n    }\n    /**\n     * @function getPhysicianRecord Fetches all physician records from the database and matches the physician ID from the diagnosis record\n     * @description Fetches all physician records from the database and matches the physician ID from the diagnosis record\n     */\n    getPhysicianRecord() {\n      this.dbService.getAllPhysician().subscribe(physicianDB => {\n        for (let dr of physicianDB) {\n          if (dr.physician_id === this.aDiagnosis.physicianId) {\n            this.aPhysician = dr;\n            console.log(\"physician Record\", this.aPhysician);\n          }\n        }\n      });\n    }\n    /**\n     * @function AddPrescription Navigates the user to the Add Prescription page, passing the diagnosis ID as a parameter\n     * @description Navigates the user to the Add Prescription page, passing the diagnosis ID as a parameter\n     * @param diagnosisId The ID of the diagnosis for which the prescription will be added\n     */\n    AddPrescription(diagnosisId) {\n      this.router.navigate(['/add-prescription', diagnosisId]);\n    }\n    /**\n     * @function viewSelectedPrescription Navigates the user to the Display Prescription page, passing the prescription ID as a parameter\n     * @description Navigates the user to the Display Prescription page, passing the prescription ID as a parameter\n     * @param prescription_id The ID of the prescription to be viewed\n     */\n    viewSelectedPrescription(prescription_id) {\n      this.router.navigate(['/display-prescription', prescription_id]);\n    }\n    /**\n     * @function updateDiagnosis Navigates the user to the Update Diagnosis page, passing the diagnosis ID as a parameter\n     * @description Navigates the user to the Update Diagnosis page, passing the diagnosis ID as a parameter\n     * @param diagnosisId The ID of the diagnosis to be updated\n     */\n    updateDiagnosis(diagnosisId) {\n      console.log(\"Update button submit\");\n      this.router.navigate(['/update-diagnosis', diagnosisId]);\n    }\n    static #_ = this.ɵfac = function ViewDiagnosisComponent_Factory(t) {\n      return new (t || ViewDiagnosisComponent)(i0.ɵɵdirectiveInject(i1.DatabaseService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ViewDiagnosisComponent,\n      selectors: [[\"app-view-diagnosis\"]],\n      decls: 163,\n      vars: 27,\n      consts: [[1, \"container\", 2, \"width\", \"72rem\", \"margin-bottom\", \"2rem\"], [1, \"text-center\"], [1, \"row\"], [1, \"col-md-4\", \"mb-3\"], [1, \"card\", 2, \"height\", \"100%\"], [1, \"card-body\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"card-title\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"card\"], [1, \"row\", \"row-cols-1\", \"g-3\"], [1, \"col\"], [1, \"table\", \"table-hover\"], [4, \"ngFor\", \"ngForOf\"], [1, \"col-md-8\", \"mb-3\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"col-md-6\"], [1, \"mb-3\"], [1, \"card-title\", \"mt-4\"], [1, \"bg-dark\", \"text-center\", \"text-white\"], [1, \"text-center\", \"p-3\", 2, \"background-color\", \"rgba(0, 0, 0, 0.2)\"], [1, \"text-white\"]],\n      template: function ViewDiagnosisComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"main\")(1, \"div\", 0)(2, \"h1\", 1);\n          i0.ɵɵtext(3, \"Consultation and Diagnosis Details\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 1)(5, \"p\")(6, \"strong\");\n          i0.ɵɵtext(7, \"Consultation ID:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"p\")(10, \"strong\");\n          i0.ɵɵtext(11, \"Consultation Date, Time:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(12);\n          i0.ɵɵpipe(13, \"dateTimeFormat\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"section\")(15, \"div\", 2)(16, \"div\", 3)(17, \"div\", 4)(18, \"div\", 5)(19, \"div\", 6)(20, \"h4\", 7)(21, \"strong\");\n          i0.ɵɵtext(22, \"Prescriptions\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(23, \"button\", 8);\n          i0.ɵɵlistener(\"click\", function ViewDiagnosisComponent_Template_button_click_23_listener() {\n            return ctx.AddPrescription(ctx.aDiagnosis.diagnosisId);\n          });\n          i0.ɵɵtext(24, \"Add\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(25, \"hr\");\n          i0.ɵɵelementStart(26, \"div\", 9)(27, \"div\", 10)(28, \"div\", 11)(29, \"table\", 12)(30, \"thead\")(31, \"tr\")(32, \"th\");\n          i0.ɵɵtext(33, \"ID\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"th\");\n          i0.ɵɵtext(35, \"Prescription\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"th\");\n          i0.ɵɵtext(37, \"View\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(38, \"tbody\");\n          i0.ɵɵtemplate(39, ViewDiagnosisComponent_tr_39_Template, 8, 2, \"tr\", 13);\n          i0.ɵɵelementEnd()()()()()()()();\n          i0.ɵɵelementStart(40, \"div\", 14)(41, \"div\", 4)(42, \"div\", 5)(43, \"div\", 6)(44, \"h4\", 7)(45, \"strong\");\n          i0.ɵɵtext(46, \"Diagnosis Details\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(47, \"button\", 15);\n          i0.ɵɵlistener(\"click\", function ViewDiagnosisComponent_Template_button_click_47_listener() {\n            return ctx.updateDiagnosis(ctx.aDiagnosis.diagnosisId);\n          });\n          i0.ɵɵtext(48, \"Update\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(49, \"hr\");\n          i0.ɵɵelementStart(50, \"div\", 2)(51, \"div\", 16)(52, \"p\")(53, \"strong\");\n          i0.ɵɵtext(54, \"Diagnisis ID:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(55);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(56, \"div\", 16)(57, \"p\")(58, \"strong\");\n          i0.ɵɵtext(59, \"Date:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(60);\n          i0.ɵɵpipe(61, \"dateFormat\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(62, \"div\", 17)(63, \"p\")(64, \"strong\");\n          i0.ɵɵtext(65, \"Treatment Description:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(66);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(67, \"div\", 17)(68, \"p\")(69, \"strong\");\n          i0.ɵɵtext(70, \"Additional Note:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(71);\n          i0.ɵɵelementEnd()()()()()()();\n          i0.ɵɵelementStart(72, \"section\")(73, \"div\", 2)(74, \"div\", 3)(75, \"div\", 4)(76, \"div\", 5)(77, \"h4\", 7)(78, \"strong\");\n          i0.ɵɵtext(79, \"Physician in Charge\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(80, \"hr\");\n          i0.ɵɵelementStart(81, \"p\")(82, \"strong\");\n          i0.ɵɵtext(83, \"Physician ID:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(84);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(85, \"p\")(86, \"strong\");\n          i0.ɵɵtext(87, \"Physician Name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(88);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(89, \"p\");\n          i0.ɵɵelementStart(90, \"h4\", 18)(91, \"strong\");\n          i0.ɵɵtext(92, \"Patient Information\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(93, \"hr\");\n          i0.ɵɵelementStart(94, \"p\")(95, \"strong\");\n          i0.ɵɵtext(96, \"Patient ID:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(97);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(98, \"p\")(99, \"strong\");\n          i0.ɵɵtext(100, \"Patient Name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(101);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(102, \"div\", 14)(103, \"div\", 4)(104, \"div\", 5)(105, \"h4\", 7)(106, \"strong\");\n          i0.ɵɵtext(107, \"Consultation Examination Details\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(108, \"hr\");\n          i0.ɵɵelementStart(109, \"div\", 2)(110, \"div\", 16)(111, \"p\")(112, \"strong\");\n          i0.ɵɵtext(113, \"General Appearance:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(114);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(115, \"p\")(116, \"strong\");\n          i0.ɵɵtext(117, \"Body Temperature:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(118);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(119, \"p\")(120, \"strong\");\n          i0.ɵɵtext(121, \"Height:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(122);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(123, \"p\")(124, \"strong\");\n          i0.ɵɵtext(125, \"Weight:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(126);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(127, \"div\", 16)(128, \"p\")(129, \"strong\");\n          i0.ɵɵtext(130, \"Blood Pressure:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(131);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(132, \"p\")(133, \"strong\");\n          i0.ɵɵtext(134, \"Breathing Pattern:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(135);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(136, \"p\")(137, \"strong\");\n          i0.ɵɵtext(138, \"Pupil Reflex Condition:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(139);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(140, \"p\")(141, \"strong\");\n          i0.ɵɵtext(142, \"Nerve Reflex Condition:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(143);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(144, \"div\", 17)(145, \"p\")(146, \"strong\");\n          i0.ɵɵtext(147, \"Other:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(148);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(149, \"h4\", 7)(150, \"strong\");\n          i0.ɵɵtext(151, \"Patient Symptoms\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(152, \"hr\");\n          i0.ɵɵelementStart(153, \"div\", 17)(154, \"p\")(155, \"strong\");\n          i0.ɵɵtext(156, \"Symptoms:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(157);\n          i0.ɵɵelementEnd()()()()()()()()();\n          i0.ɵɵelementStart(158, \"footer\", 19)(159, \"div\", 20);\n          i0.ɵɵtext(160, \" \\u00A9 2024 Built by: \");\n          i0.ɵɵelementStart(161, \"a\", 21);\n          i0.ɵɵtext(162, \"MDS02\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate1(\" \", ctx.aConsultation.consultationId, \"\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(13, 23, ctx.aConsultation.consultationDateTime), \"\");\n          i0.ɵɵadvance(27);\n          i0.ɵɵproperty(\"ngForOf\", ctx.aDiagnosis.prescriptionList);\n          i0.ɵɵadvance(16);\n          i0.ɵɵtextInterpolate1(\" \", ctx.aDiagnosis.diagnosisId, \"\");\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(61, 25, ctx.aDiagnosis.diagnosisDate), \"\");\n          i0.ɵɵadvance(6);\n          i0.ɵɵtextInterpolate1(\" \", ctx.aDiagnosis.diagnosisDescription, \"\");\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate1(\" \", ctx.aDiagnosis.diagnosisAdditional, \"\");\n          i0.ɵɵadvance(13);\n          i0.ɵɵtextInterpolate1(\" \", ctx.aPhysician.physician_id, \"\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate2(\" Dr. \", ctx.aPhysician.physician_firstName, \" \", ctx.aPhysician.physician_lastName, \"\");\n          i0.ɵɵadvance(9);\n          i0.ɵɵtextInterpolate1(\" \", ctx.aPatient.patientId, \"\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate2(\" \", ctx.aPatient.firstName, \" \", ctx.aPatient.lastName, \"\");\n          i0.ɵɵadvance(13);\n          i0.ɵɵtextInterpolate1(\" \", ctx.aConsultation.generalAppearance, \"\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", ctx.aConsultation.temperature, \"\\u00B0C\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", ctx.aConsultation.height, \"cm\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", ctx.aConsultation.weight, \"kg\");\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate1(\" \", ctx.aConsultation.bloodPressure, \"mmHg\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", ctx.aConsultation.breathingPattern, \"\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", ctx.aConsultation.pupilReflexCondition, \"\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", ctx.aConsultation.nerveReflexCondition, \"\");\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate1(\" \", ctx.aConsultation.other, \"\");\n          i0.ɵɵadvance(9);\n          i0.ɵɵtextInterpolate1(\" \", ctx.aConsultation.patientSymptom, \"\");\n        }\n      },\n      dependencies: [i3.NgForOf, i4.DateFormatPipe, i5.DateTimeFormatPipe]\n    });\n  }\n  return ViewDiagnosisComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}