{"ast":null,"code":"import * as i0 from \"@angular/core\";\n// Define a new pipe with the name 'calculateAge'\n// The pipe class implements the PipeTransform interface\nexport let CalculateAgePipe = /*#__PURE__*/(() => {\n  class CalculateAgePipe {\n    /**\n     * The transform method calculates the age based on the provided birthdate.\n     * It converts the birthdate into milliseconds, computes the difference from the current date, and converts the difference into years.\n     *\n     * @param value The input value to be transformed (expected to be a date string)\n     * @param args Additional optional arguments (unused in this case)\n     * @returns The age in years as a number\n     */\n    transform(value, ...args) {\n      // Convert the input value (birthdate) to a timestamp in milliseconds\n      let birthday = +new Date(value);\n      // Calculate the age by subtracting the birthdate from the current timestamp, dividing by the length of a year in milliseconds,\n      // and rounding down to the nearest whole number.\n      return ~~((Date.now() - birthday) / 31557600000);\n      // 31557600000 is the number of milliseconds in a year\n      // 24 * 3600 * 365.25 * 1000\n      // 365.25 days account for the extra 6 hours of the leap year\n    }\n    static #_ = this.ɵfac = function CalculateAgePipe_Factory(t) {\n      return new (t || CalculateAgePipe)();\n    };\n    static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n      name: \"calculateAge\",\n      type: CalculateAgePipe,\n      pure: true\n    });\n  }\n  return CalculateAgePipe;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}