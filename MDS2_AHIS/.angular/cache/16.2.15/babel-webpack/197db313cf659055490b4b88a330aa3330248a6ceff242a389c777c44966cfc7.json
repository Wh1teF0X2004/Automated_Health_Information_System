{"ast":null,"code":"import { ToUpperCasePipe } from 'src/app/pipes/to-upper-case.pipe';\nimport { DateFormatPipe } from 'src/app/pipes/date-format.pipe';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/database.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../pipes/date-format.pipe\";\nimport * as i4 from \"../../../pipes/to-upper-case.pipe\";\nexport let DisplayPhysicianComponent = /*#__PURE__*/(() => {\n  class DisplayPhysicianComponent {\n    /**\n     * The constructor of this component has three dependencies: the DatabaseService, the ActivatedRoute, and the Router\n     * @param dbService Service used to fetch and manage data from the database\n     * @param router Service used for navigation between components/pages\n     * @param route Provides information about the current route in the application\n     */\n    constructor(dbService, route, router) {\n      this.dbService = dbService;\n      this.route = route;\n      this.router = router;\n      this.imageUrl = '../assets/images/banner-sample.png';\n      // Physician ID\n      this.physician_id = \"\";\n      this.objectId = \"\";\n      // Physician Details\n      this.physician_firstName = \"\";\n      this.physician_lastName = \"\";\n      this.birth_date = new Date();\n      this.department = \"\";\n      // Database\n      this.physicianDB = [];\n      this.medicationDB = [];\n      this.patientDB = [];\n      this.prescriptionDB = [];\n      this.physician_id = this.route.snapshot.paramMap.get('physician_id');\n      console.log(\"doctor id: \", this.physician_id);\n    }\n    /**\n     * @function ngOnInit runs when the component is initiated\n     * @description Fetches the matching physician data by a specific physician ID by calling the database\n     */\n    ngOnInit() {\n      this.dbService.getAllPhysician().subscribe(data => {\n        if (data && data.length > 0) {\n          const matchingPhysician = data.find(doc => doc.physician_id === this.physician_id);\n          console.log(\"FOUND matching physician: \", matchingPhysician);\n          if (matchingPhysician) {\n            this.objectId = matchingPhysician._id;\n            this.physician_id = matchingPhysician.physician_id;\n            this.physician_firstName = matchingPhysician.physician_firstName;\n            this.physician_lastName = matchingPhysician.physician_lastName;\n            this.birth_date = matchingPhysician.birth_date;\n            this.department = matchingPhysician.department;\n          } else {\n            this.router.navigate(['/invalid-data']);\n          }\n        } else {\n          this.router.navigate(['/invalid-data']);\n        }\n      });\n    }\n    static #_ = this.ɵfac = function DisplayPhysicianComponent_Factory(t) {\n      return new (t || DisplayPhysicianComponent)(i0.ɵɵdirectiveInject(i1.DatabaseService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DisplayPhysicianComponent,\n      selectors: [[\"app-display-physician\"]],\n      features: [i0.ɵɵProvidersFeature([ToUpperCasePipe, DateFormatPipe])],\n      decls: 41,\n      vars: 15,\n      consts: [[1, \"d-flex\", \"justify-content-center\", \"mt-4\"], [1, \"card\", 2, \"width\", \"72rem\", \"margin-bottom\", \"2rem\"], [1, \"card-body\"], [1, \"container\", 2, \"width\", \"70%\"], [1, \"card-title\", \"text-center\", 2, \"color\", \"#007bff\"], [1, \"row\"], [1, \"bg-dark\", \"text-center\", \"text-white\", \"fixed-bottom\"], [1, \"text-center\", \"p-3\", 2, \"background-color\", \"rgba(0, 0, 0, 0.2)\"], [1, \"text-white\"]],\n      template: function DisplayPhysicianComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n          i0.ɵɵtext(5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"hr\");\n          i0.ɵɵelementStart(7, \"div\", 5)(8, \"p\")(9, \"strong\");\n          i0.ɵɵtext(10, \"Object ID:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"p\")(13, \"strong\");\n          i0.ɵɵtext(14, \"Physician/Doctor ID:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(15);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"p\")(17, \"strong\");\n          i0.ɵɵtext(18, \"First Name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(19);\n          i0.ɵɵpipe(20, \"toUpperCase\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"p\")(22, \"strong\");\n          i0.ɵɵtext(23, \"Last Name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(24);\n          i0.ɵɵpipe(25, \"toUpperCase\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"p\")(27, \"strong\");\n          i0.ɵɵtext(28, \"Birth Date:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(29);\n          i0.ɵɵpipe(30, \"dateFormat\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"p\")(32, \"strong\");\n          i0.ɵɵtext(33, \"Department:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(34);\n          i0.ɵɵpipe(35, \"toUpperCase\");\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelementStart(36, \"footer\", 6)(37, \"div\", 7);\n          i0.ɵɵtext(38, \" \\u00A9 2024 Built by: \");\n          i0.ɵɵelementStart(39, \"a\", 8);\n          i0.ɵɵtext(40, \"MDS02\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate1(\"\", ctx.physician_id, \" Details\");\n          i0.ɵɵadvance(6);\n          i0.ɵɵtextInterpolate1(\" \", ctx.objectId, \"\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", ctx.physician_id, \"\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(20, 7, ctx.physician_firstName), \"\");\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(25, 9, ctx.physician_lastName), \"\");\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(30, 11, ctx.birth_date), \"\");\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(35, 13, ctx.department), \"\");\n        }\n      },\n      dependencies: [i3.DateFormatPipe, i4.ToUpperCasePipe]\n    });\n  }\n  return DisplayPhysicianComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}