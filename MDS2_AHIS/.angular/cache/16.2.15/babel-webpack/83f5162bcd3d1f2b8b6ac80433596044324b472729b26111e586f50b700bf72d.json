{"ast":null,"code":"/**\n * @author Alicia Quek Chik Wen <aque0004@student.monash.edu>\n * @author Foo Kai Yan 33085625 <kfoo0012@student.monash.edu>\n*/\n// Angular core and platform modules\nimport { isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\n// Root component for bootstrapping the app\nimport { AppComponent } from './app.component';\n// FormsModule is used for template-driven forms in Angular\nimport { FormsModule } from '@angular/forms';\n// RouterModule and Routes define and manage the application's routes\nimport { RouterModule } from '@angular/router';\n// PageNotFoundComponent handles invalid or non-existing routes\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\n// DatabaseService is the main service for interacting with the database\nimport { DatabaseService } from './services/database.service';\n// HttpClientModule is used to perform HTTP requests to a backend\nimport { HttpClientModule } from '@angular/common/http';\n// Component to handle invalid data errors\nimport { InvalidDataErrorComponent } from './components/invalid-data-error/invalid-data-error.component';\n// ServiceWorkerModule is used to enable Progressive Web App (PWA) functionality\nimport { ServiceWorkerModule } from '@angular/service-worker';\n// Main components for the application\nimport { HomepageComponent } from './components/homepage/homepage.component';\n// Components related to managing patients\nimport { AddPatientComponent } from './components/patient/add-patient/add-patient.component';\nimport { ListPatientComponent } from './components/patient/list-patient/list-patient.component';\nimport { UpdatePatientComponent } from './components/patient/update-patient/update-patient.component';\nimport { ViewPatientComponent } from './components/patient/view-patient/view-patient.component';\n// Components related to managing medications\nimport { AddMedicationComponent } from './components/medication/add-medication/add-medication.component';\nimport { ListMedicationComponent } from './components/medication/list-medication/list-medication.component';\nimport { UpdateMedicationComponent } from './components/medication/update-medication/update-medication.component';\nimport { DisplayMedicationComponent } from './components/medication/display-medication/display-medication.component';\n// Components related to managing prescriptions\nimport { AddPrescriptionComponent } from './components/prescription/add-prescription/add-prescription.component';\nimport { ListPrescriptionComponent } from './components/prescription/list-prescription/list-prescription.component';\nimport { UpdatePrescriptionComponent } from './components/prescription/update-prescription/update-prescription.component';\nimport { DisplayPrescriptionComponent } from './components/prescription/display-prescription/display-prescription.component';\n// Components related to managing appointments\nimport { AddAppointmentComponent } from './components/appointment/add-appointment/add-appointment.component';\nimport { ListAppointmentComponent } from './components/appointment/list-appointment/list-appointment.component';\nimport { DisplayAppointmentComponent } from './components/appointment/display-appointment/display-appointment.component';\nimport { UpdateAppointmentComponent } from './components/appointment/update-appointment/update-appointment.component';\n// Components related to managing physicians\nimport { AddPhysicianComponent } from './components/physician/add-physician/add-physician.component';\nimport { ListPhysicianComponent } from './components/physician/list-physician/list-physician.component';\nimport { DisplayPhysicianComponent } from './components/physician/display-physician/display-physician.component';\nimport { UpdatePhysicianComponent } from './components/physician/update-physician/update-physician.component';\n// Components related to managing consultations\nimport { AddConsultationComponent } from './components/consultation/add-consultation/add-consultation.component';\nimport { ListConsultationComponent } from './components/consultation/list-consultation/list-consultation.component';\nimport { UpdateConsultationComponent } from './components/consultation/update-consultation/update-consultation.component';\nimport { ViewConsultationComponent } from './components/consultation/view-consultation/view-consultation.component';\n// Components related to managing diagnoses\nimport { AddDiagnosisComponent } from './components/diagnosis/add-diagnosis/add-diagnosis.component';\nimport { ListDiagnosisComponent } from './components/diagnosis/list-diagnosis/list-diagnosis.component';\nimport { UpdateDiagnosisComponent } from './components/diagnosis/update-diagnosis/update-diagnosis.component';\nimport { ViewDiagnosisComponent } from './components/diagnosis/view-diagnosis/view-diagnosis.component';\n// Components related to login and register\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ValidateAdminComponent } from './components/register/validate-admin/validate-admin.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/service-worker\";\n// Define application routes\nconst routes = [{\n  path: 'add-patient',\n  component: AddPatientComponent\n}, {\n  path: 'list-patients',\n  component: ListPatientComponent\n}, {\n  path: 'invalid-data',\n  component: InvalidDataErrorComponent\n}, {\n  path: 'view-patient/:patientId',\n  component: ViewPatientComponent\n}, {\n  path: 'update-patient/:patientId',\n  component: UpdatePatientComponent\n}, {\n  path: 'add-medication',\n  component: AddMedicationComponent\n}, {\n  path: 'list-medication',\n  component: ListMedicationComponent\n}, {\n  path: 'display-medication/:medication_id',\n  component: DisplayMedicationComponent\n}, {\n  path: 'update-medication/:medication_id',\n  component: UpdateMedicationComponent\n}, {\n  path: 'add-prescription/:diagnosisId',\n  component: AddPrescriptionComponent\n}, {\n  path: 'list-prescription',\n  component: ListPrescriptionComponent\n}, {\n  path: 'display-prescription/:prescription_id',\n  component: DisplayPrescriptionComponent\n}, {\n  path: 'update-prescription/:prescription_id',\n  component: UpdatePrescriptionComponent\n}, {\n  path: 'add-appointment',\n  component: AddAppointmentComponent\n}, {\n  path: 'list-appointment',\n  component: ListAppointmentComponent\n}, {\n  path: 'display-appointment/:appointment_id',\n  component: DisplayAppointmentComponent\n}, {\n  path: 'update-appointment/:appointment_id',\n  component: UpdateAppointmentComponent\n}, {\n  path: 'add-physician',\n  component: AddPhysicianComponent\n}, {\n  path: 'list-physician',\n  component: ListPhysicianComponent\n}, {\n  path: 'display-physician/:physician_id',\n  component: DisplayPhysicianComponent\n}, {\n  path: 'update-physician/:physician_id',\n  component: UpdatePhysicianComponent\n}, {\n  path: 'start-consultation/:appointment_id',\n  component: AddConsultationComponent\n}, {\n  path: 'list-consultation',\n  component: ListConsultationComponent\n}, {\n  path: 'update-consultation/:consultationId',\n  component: UpdateConsultationComponent\n}, {\n  path: 'view-consultation/:consultationId',\n  component: ViewConsultationComponent\n}, {\n  path: 'add-diagnosis/:consultationId',\n  component: AddDiagnosisComponent\n}, {\n  path: 'list-diagnosis',\n  component: ListDiagnosisComponent\n}, {\n  path: 'update-diagnosis/:diagnosisId',\n  component: UpdateDiagnosisComponent\n}, {\n  path: 'view-diagnosis/:diagnosisId',\n  component: ViewDiagnosisComponent\n}, {\n  path: 'login',\n  component: LoginComponent\n}, {\n  path: 'register',\n  component: RegisterComponent\n}, {\n  path: 'admin-authentication',\n  component: ValidateAdminComponent\n}, {\n  path: \"home\",\n  component: HomepageComponent\n}, {\n  path: '',\n  pathMatch: 'full',\n  component: LoginComponent\n}, {\n  path: '**',\n  component: PageNotFoundComponent\n} // Wildcard route for undefined paths\n];\n\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {\n    static #_ = this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n    static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n    static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [DatabaseService],\n      imports: [BrowserModule, FormsModule, RouterModule.forRoot(routes, {\n        useHash: true\n      }), HttpClientModule, ServiceWorkerModule.register('ngsw-worker.js', {\n        enabled: !isDevMode(),\n        registrationStrategy: 'registerWhenStable:30000' // Register service worker when app is stable or after 30 seconds\n      }), ReactiveFormsModule]\n    });\n  }\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}