{"ast":null,"code":"import { ToUpperCasePipe } from 'src/app/pipes/to-upper-case.pipe';\nimport { DateFormatPipe } from 'src/app/pipes/date-format.pipe';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/database.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../../pipes/to-upper-case.pipe\";\nfunction UpdatePhysicianComponent_tr_34_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"toUpperCase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"toUpperCase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"toUpperCase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\")(13, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function UpdatePhysicianComponent_tr_34_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const doc_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selectPhysicianButton(doc_r1.physician_id));\n    });\n    i0.ɵɵtext(14, \"Select\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const doc_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(doc_r1.physician_id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 4, doc_r1.physician_firstName));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 6, doc_r1.physician_lastName));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 8, doc_r1.department));\n  }\n}\nexport let UpdatePhysicianComponent = /*#__PURE__*/(() => {\n  class UpdatePhysicianComponent {\n    /**\n     * @constructor The constructor of this component has three dependencies: the DatabaseService, the ActivatedRoute, and the Router\n     * @param dbService Service used to fetch and manage data from the database\n     * @param router Service used for navigation between components/pages\n     * @param route Provides information about the current route in the application\n     */\n    constructor(dbService, route, router) {\n      this.dbService = dbService;\n      this.route = route;\n      this.router = router;\n      this.imageUrl = '../assets/images/banner-sample.png';\n      this.physician_id = \"\";\n      // Database\n      this.physicianDB = [];\n      // Details that can be updated\n      this.newDepartment = \"\";\n      this.physician_id = this.route.snapshot.paramMap.get('physician_id');\n      console.log(\"doctor id: \", this.physician_id);\n    }\n    /**\n     * @function ngOnInit runs when the component is initiated\n     * @description Fetches all physicians data from the database\n     */\n    ngOnInit() {\n      this.dbService.getAllPhysician().subscribe(data => {\n        this.physicianDB = data;\n      });\n      console.log(this.physicianDB);\n    }\n    /**\n     * @function selectPhysicianButton Navigates the user to the Display physician page, passing the physician ID as a parameter\n     * @description Navigates the user to the Display physician page, passing the physician ID as a parameter\n     * @param physician_id The ID of the selected physician\n     */\n    selectPhysicianButton(physician_id) {\n      this.physician_id = physician_id;\n    }\n    /**\n     * @function updateButton Sends the updated physician details to the DatabaseService for updating the database\n     * @description Sends the updated physician details to the DatabaseService for updating the database\n     * @summary Creates an object with the physician_id and updated department details and passes it to the update service\n     */\n    updateButton() {\n      const obj = {\n        physician_id: this.physician_id,\n        department: this.newDepartment\n      };\n      this.dbService.updatePhysician(obj).subscribe({\n        next: result => {\n          // Successful response\n          console.log(obj);\n          this.dbService.getAllPhysician().subscribe(data => {\n            this.physicianDB = data;\n          });\n        },\n        error: error => {\n          // Error handling\n          console.log(obj);\n          console.error('Error:', error);\n          this.router.navigate(['/invalid-data']);\n        }\n      });\n    }\n    static #_ = this.ɵfac = function UpdatePhysicianComponent_Factory(t) {\n      return new (t || UpdatePhysicianComponent)(i0.ɵɵdirectiveInject(i1.DatabaseService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UpdatePhysicianComponent,\n      selectors: [[\"app-update-physician\"]],\n      features: [i0.ɵɵProvidersFeature([ToUpperCasePipe, DateFormatPipe])],\n      decls: 40,\n      vars: 3,\n      consts: [[1, \"d-flex\", \"justify-content-center\", \"mt-4\"], [1, \"card\", 2, \"width\", \"72rem\", \"margin-bottom\", \"2rem\"], [1, \"card-body\"], [1, \"card-title\", \"text-center\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"name\", \"id\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-3\", 3, \"click\"], [1, \"row\", \"row-cols-1\", \"g-3\"], [1, \"col\"], [1, \"table\", \"table-hover\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-dark\", \"text-center\", \"text-white\"], [1, \"text-center\", \"p-3\", 2, \"background-color\", \"rgba(0, 0, 0, 0.2)\"], [1, \"text-white\"], [\"scope\", \"row\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n      template: function UpdatePhysicianComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n          i0.ɵɵtext(4, \"Select one of the Physician\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n          i0.ɵɵtext(7, \"Selected Physician ID:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"h3\");\n          i0.ɵɵtext(9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"label\", 5);\n          i0.ɵɵtext(11, \"Newly Assigned Department:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"input\", 6);\n          i0.ɵɵlistener(\"ngModelChange\", function UpdatePhysicianComponent_Template_input_ngModelChange_12_listener($event) {\n            return ctx.newDepartment = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"button\", 7);\n          i0.ɵɵlistener(\"click\", function UpdatePhysicianComponent_Template_button_click_13_listener() {\n            return ctx.updateButton();\n          });\n          i0.ɵɵtext(14, \"Update\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(15, \"main\", 0)(16, \"div\", 1)(17, \"div\", 2)(18, \"div\", 8)(19, \"div\", 9)(20, \"table\", 10)(21, \"thead\")(22, \"tr\")(23, \"th\", 11);\n          i0.ɵɵtext(24, \"ID\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"th\", 11);\n          i0.ɵɵtext(26, \"First Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"th\", 11);\n          i0.ɵɵtext(28, \"Last Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"th\", 11);\n          i0.ɵɵtext(30, \"Department\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"th\", 11);\n          i0.ɵɵtext(32, \"Select\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(33, \"tbody\");\n          i0.ɵɵtemplate(34, UpdatePhysicianComponent_tr_34_Template, 15, 10, \"tr\", 12);\n          i0.ɵɵelementEnd()()()()()()();\n          i0.ɵɵelementStart(35, \"footer\", 13)(36, \"div\", 14);\n          i0.ɵɵtext(37, \" \\u00A9 2024 Built by: \");\n          i0.ɵɵelementStart(38, \"a\", 15);\n          i0.ɵɵtext(39, \"MDS02\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵtextInterpolate(ctx.physician_id);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.newDepartment);\n          i0.ɵɵadvance(22);\n          i0.ɵɵproperty(\"ngForOf\", ctx.physicianDB);\n        }\n      },\n      dependencies: [i3.NgForOf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.RequiredValidator, i4.NgModel, i5.ToUpperCasePipe]\n    });\n  }\n  return UpdatePhysicianComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}