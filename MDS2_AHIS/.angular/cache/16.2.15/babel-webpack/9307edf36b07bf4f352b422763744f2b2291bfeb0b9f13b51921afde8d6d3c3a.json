{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// Define HTTP options with JSON content type for requests\nconst httpOptions = {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/json\"\n  })\n};\n// Injectable decorator to make the service available throughout the app\n/**\n * The main benefit of having a service is to organize and share methods, models, or data with different components of an Angular application.\n * This Database Service is responsible for the communication with the RESTFul server.\n*/\nexport let DatabaseService = /*#__PURE__*/(() => {\n  class DatabaseService {\n    // Inject HttpClient to make HTTP requests\n    constructor(http) {\n      this.http = http;\n    }\n    /**\n     * Patient\n     * @author Alicia Quek Chik Wen <aque0004@student.monash.edu>\n    */\n    insertPatient(aPatient) {\n      return this.http.post(\"/patient/add\", aPatient, httpOptions);\n    }\n    getPatients() {\n      return this.http.get(\"/patient/list-patients\", httpOptions);\n    }\n    deletePatient(patientId) {\n      return this.http.delete(\"/patient/delete-patient\", {\n        body: {\n          patientId: patientId\n        },\n        ...httpOptions\n      });\n    }\n    updatePatient(aPatient) {\n      console.log(\"Database service update patient is invoked\", aPatient);\n      return this.http.put(\"/patient/update-patient\", aPatient, httpOptions);\n    }\n    /**\n     * Consultation\n     * @author Alicia Quek Chik Wen <aque0004@student.monash.edu>\n    */\n    insertConsultation(aConsultation) {\n      console.log(\"Database service add consultation is invoked\", aConsultation);\n      return this.http.post(\"/consultation/add\", aConsultation, httpOptions);\n    }\n    getConsultations() {\n      return this.http.get(\"/consultation/list-consultation\", httpOptions);\n    }\n    deleteConsultation(consultationId) {\n      console.log(\"Database service delete consultation is invoked\", consultationId);\n      return this.http.delete(\"/consultation/delete-consultation\", {\n        body: {\n          consultationId: consultationId\n        },\n        ...httpOptions\n      });\n    }\n    updateConsultation(aConsultation) {\n      console.log(\"Database service update patient is invoked\", aConsultation);\n      return this.http.put(\"/consultation/update-consultation\", aConsultation, httpOptions);\n    }\n    /**\n     * Diagnosis\n     * @author Alicia Quek Chik Wen <aque0004@student.monash.edu>\n    */\n    insertDiagnosis(aDiagnosis) {\n      console.log(\"Database service add Diagnosis is invoked\", aDiagnosis);\n      return this.http.post(\"/diagnosis/add\", aDiagnosis, httpOptions);\n    }\n    getDiagnosis() {\n      return this.http.get(\"/diagnosis/list-diagnosis\", httpOptions);\n    }\n    deleteDiagnosis(diagnosisId) {\n      console.log(\"Database service delete Diagnosis is invoked\", diagnosisId);\n      return this.http.delete(\"/diagnosis/delete-diagnosis\", {\n        body: {\n          diagnosisId: diagnosisId\n        },\n        ...httpOptions\n      });\n    }\n    updateDiagnosis(aDiagnosis) {\n      console.log(\"Database service update Diagnosis is invoked\", aDiagnosis);\n      return this.http.put(\"/diagnosis/update-diagnosis\", aDiagnosis, httpOptions);\n    }\n    /**\n    * Login\n    * @author Alicia Quek Chik Wen <aque0004@student.monash.edu>\n    */\n    loginService(logObj) {\n      console.log(\"Database service add login is invoked\", logObj);\n      return this.http.post(\"/auth/login\", logObj, httpOptions);\n    }\n    /**\n     * Register\n     * @author Alicia Quek Chik Wen <aque0004@student.monash.edu>\n    */\n    registerService(registerObj) {\n      console.log(\"Database service add register is invoked\", registerObj);\n      return this.http.post(\"/auth/register\", registerObj, httpOptions);\n    }\n    /**\n     * Medication\n     * @author Foo Kai Yan 33085625 <kfoo0012@student.monash.edu>\n    */\n    addMedication(data) {\n      return this.http.post(\"/medication\", data, httpOptions);\n    }\n    deleteMedicationById(medication_id) {\n      return this.http.delete(\"/medication\", {\n        body: {\n          medication_id: medication_id\n        },\n        ...httpOptions\n      });\n    }\n    getAllMedication() {\n      return this.http.get(\"/medication\", httpOptions);\n    }\n    updateMedication(data) {\n      return this.http.put(\"/medication\", data, httpOptions);\n    }\n    /**\n     * Prescription\n     * @author Foo Kai Yan 33085625 <kfoo0012@student.monash.edu>\n    */\n    addPrescription(data) {\n      return this.http.post(\"/prescription\", data, httpOptions);\n    }\n    deletePrescriptionById(prescription_id) {\n      return this.http.delete(\"/prescription\", {\n        body: {\n          prescription_id: prescription_id\n        },\n        ...httpOptions\n      });\n    }\n    getAllPrescription() {\n      return this.http.get(\"/prescription\", httpOptions);\n    }\n    updatePrescription(data) {\n      return this.http.put(\"/prescription\", data, httpOptions);\n    }\n    /**\n     * Appointment\n     * @author Foo Kai Yan 33085625 <kfoo0012@student.monash.edu>\n    */\n    addAppointment(data) {\n      return this.http.post(\"/appointment\", data, httpOptions);\n    }\n    deleteAppointmentById(appointment_id) {\n      return this.http.delete(\"/appointment\", {\n        body: {\n          appointment_id: appointment_id\n        },\n        ...httpOptions\n      });\n    }\n    getAllAppointment() {\n      return this.http.get(\"/appointment\", httpOptions);\n    }\n    updateAppointment(data) {\n      return this.http.put(\"/appointment\", data, httpOptions);\n    }\n    /**\n     * Physician/Doctor\n     * @author Foo Kai Yan 33085625 <kfoo0012@student.monash.edu>\n    */\n    addPhysician(data) {\n      return this.http.post(\"/physician\", data, httpOptions);\n    }\n    deletePhysicianById(physician_id) {\n      return this.http.delete(\"/physician\", {\n        body: {\n          physician_id: physician_id\n        },\n        ...httpOptions\n      });\n    }\n    getAllPhysician() {\n      return this.http.get(\"/physician\", httpOptions);\n    }\n    updatePhysician(data) {\n      return this.http.put(\"/physician\", data, httpOptions);\n    }\n    static #_ = this.ɵfac = function DatabaseService_Factory(t) {\n      return new (t || DatabaseService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DatabaseService,\n      factory: DatabaseService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return DatabaseService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}