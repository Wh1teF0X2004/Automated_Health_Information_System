{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/database.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport let AddConsultationComponent = /*#__PURE__*/(() => {\n  class AddConsultationComponent {\n    /**\n     * @constructor The constructor of this component has three dependencies: the DatabaseService, the ActivatedRoute, and the Router\n     * @param dbService Service used to fetch and manage data from the database\n     * @param router Service used for navigation between components/pages\n     * @param route Provides information about the current route in the application\n     */\n    constructor(dbService, router, route) {\n      this.dbService = dbService;\n      this.router = router;\n      this.route = route;\n      // Generate new consultation object\n      this.consultation = {\n        physicianId: \"\",\n        patientId: \"\",\n        generalAppearance: \"\",\n        temperature: \"\",\n        height: \"\",\n        weight: \"\",\n        bloodPressure: \"\",\n        breathingPattern: \"\",\n        pupilReflexCondition: \"\",\n        nerveReflexCondition: \"\",\n        other: \"\",\n        patientSymptom: \"\"\n      };\n      this.id = \"\";\n      this.appointmentId = \"\";\n      this.patientDB = [];\n      this.aPatient = {};\n      this.anAppointment = {};\n      this.appointmentDB = [];\n      this.physicianDB = [];\n      this.aPhysician = {};\n    }\n    /**\n     * @function ngOnInit fetches appointment, patient, and physician data, and retrieves records for the selected appointment\n     * @summary Fetches appointment, patient, and physician data, and retrieves records for the selected appointment\n     * @description Fetches appointment, patient, and physician data, and retrieves records for the selected appointment\n     */\n    ngOnInit() {\n      this.getAppointmentId();\n      this.getAppointmentRecord();\n      this.getPatientRecord();\n      this.getPhysicianRecord();\n    }\n    /**\n     * @function getAppointmentId function fetch the appointment ID from the route\n     * @summary Fetch the appointment ID from the route for it to be access later\n     * @description Fetch the appointment ID from the route for it to be access later\n     */\n    getAppointmentId() {\n      this.route.paramMap.subscribe(params => {\n        this.appointmentId = params.get('appointment_id');\n        console.log(\"Get appointmentId to add consultation: \", this.appointmentId);\n      });\n    }\n    /**\n     * @function getAppointmentRecord function fetch the appointment records from the MongoDB database\n     * @summary Fetch the appointment records from the MongoDB database using the appointment ID and store it in a variable to be access later\n     * @description Fetch the appointment records from the MongoDB database using the appointment ID and store it in a variable to be access later\n     */\n    getAppointmentRecord() {\n      this.dbService.getAllAppointment().subscribe(appointmentDB => {\n        console.log(\"Get Appointment Id record\", this.appointmentId);\n        for (let app of appointmentDB) {\n          if (app.appointment_id === this.appointmentId) {\n            this.anAppointment = app;\n            console.log(\"appointment Record\", this.anAppointment);\n          }\n        }\n      });\n    }\n    /**\n     * @function getPatientRecord function fetch the Patient records from the MongoDB database\n     * @summary Fetch the Patient records from the MongoDB database using the consultation object and store it in a variable to be access later\n     * @description Fetch the Patient records from the MongoDB database using the consultation object and store it in a variable to be access later\n     */\n    getPatientRecord() {\n      this.dbService.getPatients().subscribe(patientDB => {\n        this.consultation.patientId = this.anAppointment.patient_id;\n        console.log(\"Get Patient Id record\", this.consultation.patientId);\n        for (let patient of patientDB) {\n          if (patient.patientId === this.consultation.patientId) {\n            this.aPatient = patient;\n            console.log(\"Patient Record\", this.aPatient);\n          }\n        }\n      });\n    }\n    /**\n     * @function getPhysicianRecord function fetch the Physician records from the MongoDB database\n     * @summary Fetch the Physician records from the MongoDB database using the consultation object and store it in a variable to be access later\n     * @description Fetch the Physician records from the MongoDB database using the consultation object and store it in a variable to be access later\n     */\n    getPhysicianRecord() {\n      // Fetch physicians from database and format their names for the dropdown\n      this.dbService.getAllPhysician().subscribe(physicianDB => {\n        this.consultation.physicianId = this.anAppointment.physician_id;\n        for (let dr of physicianDB) {\n          if (dr.physician_id === this.consultation.physicianId) {\n            this.aPhysician = dr;\n            console.log(\"physician Record\", this.aPhysician);\n          }\n        }\n      });\n    }\n    /**\n     * @function addConsultation function passes consultation object to the service to be sent to the server via a post request.\n     * @summary A consultation object is created based on the form inputs and is submitted to be stored in the MongoDB database.\n     * @description onSubmit is triggered when the html form is submitted and the consultation object is created and sent to the DatabaseService to add it to the MongoDB database.\n    */\n    addConsultation() {\n      this.dbService.insertConsultation(this.consultation).subscribe({\n        // uses the router service to redirect the client to another component. \n        // In other words, replace the current component with another one.\n        next: result => {\n          this.dbService.deleteAppointmentById(this.appointmentId).subscribe(() => {\n            this.router.navigate([\"/list-consultation\"]);\n          });\n        },\n        error: error => {\n          console.log('Error:', error);\n          this.router.navigate([\"/invalid-data\"]);\n        }\n      });\n    }\n    static #_ = this.ɵfac = function AddConsultationComponent_Factory(t) {\n      return new (t || AddConsultationComponent)(i0.ɵɵdirectiveInject(i1.DatabaseService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddConsultationComponent,\n      selectors: [[\"app-add-consultation\"]],\n      decls: 96,\n      vars: 16,\n      consts: [[1, \"row\", \"justify-content-center\"], [1, \"card\", 2, \"width\", \"1000px\", \"margin-bottom\", \"2rem\"], [1, \"container\", 2, \"width\", \"95%\"], [\"align\", \"center\"], [1, \"row\"], [1, \"col-md-6\", \"mb-4\", \"pb-2\"], [\"data-mdb-input-init\", \"\", 1, \"form-outline\"], [\"for\", \"height\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"patientHeight\", \"placeholder\", \"Enter height in cm\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"weight\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"patientWeight\", \"placeholder\", \"Enter weight in kg\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"generalAppearance\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"patientGeneralAppearance\", \"placeholder\", \"Enter Description, e.g Normal/Tired/Pale/Malnourished\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"bodyTemperature\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"bodyTemperature\", \"placeholder\", \"Enter body temperature value in \\u00B0C\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"bloodPressure\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"patientBloodPressure\", \"placeholder\", \"Enter blood pressure value in mmHg\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"breathingPattern\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"patientBreathingPattern\", \"placeholder\", \"Normal/Irregular\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"pupilReflexCondition\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"patientPupilReflexCondition\", \"placeholder\", \"Normal/Abnormal\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"nerveReflexCondition\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"patientNerveReflexCondition\", \"placeholder\", \"Normal/Abnormal\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"mb-3\"], [\"for\", \"description\", 1, \"form-label\"], [\"name\", \"patientOther\", \"rows\", \"3\", \"placeholder\", \"Add any additional note if needed, else leave it blank\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"Symptoms\", 1, \"form-label\"], [\"name\", \"patientSymptom\", \"rows\", \"3\", \"placeholder\", \"Enter patient symptom description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"bg-dark\", \"text-center\", \"text-white\"], [1, \"text-center\", \"p-3\", 2, \"background-color\", \"rgba(0, 0, 0, 0.2)\"], [1, \"text-white\"]],\n      template: function AddConsultationComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\", 3);\n          i0.ɵɵtext(4, \"\\u00A0\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"h1\", 3);\n          i0.ɵɵtext(6, \"Medical Consultation Form\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"h4\");\n          i0.ɵɵtext(8, \"Physician in charge\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"hr\");\n          i0.ɵɵelementStart(10, \"p\")(11, \"strong\");\n          i0.ɵɵtext(12, \"Physician Id:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"p\")(15, \"strong\");\n          i0.ɵɵtext(16, \"Physician Name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(17);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"h4\");\n          i0.ɵɵtext(19, \"Patient Information\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"hr\");\n          i0.ɵɵelementStart(21, \"p\")(22, \"strong\");\n          i0.ɵɵtext(23, \"Patient Id:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(24);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"p\")(26, \"strong\");\n          i0.ɵɵtext(27, \"Patient Name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(28);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(29, \"hr\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"main\")(31, \"div\", 2)(32, \"h4\");\n          i0.ɵɵtext(33, \"General Physical Examination\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"div\", 4)(35, \"div\", 5)(36, \"div\", 6)(37, \"label\", 7);\n          i0.ɵɵtext(38, \"Height:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(39, \"input\", 8);\n          i0.ɵɵlistener(\"ngModelChange\", function AddConsultationComponent_Template_input_ngModelChange_39_listener($event) {\n            return ctx.consultation.height = $event;\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(40, \"div\", 5)(41, \"div\", 6)(42, \"label\", 9);\n          i0.ɵɵtext(43, \"Weight:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(44, \"input\", 10);\n          i0.ɵɵlistener(\"ngModelChange\", function AddConsultationComponent_Template_input_ngModelChange_44_listener($event) {\n            return ctx.consultation.weight = $event;\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(45, \"div\", 5)(46, \"div\", 6)(47, \"label\", 11);\n          i0.ɵɵtext(48, \"General Appearance:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(49, \"input\", 12);\n          i0.ɵɵlistener(\"ngModelChange\", function AddConsultationComponent_Template_input_ngModelChange_49_listener($event) {\n            return ctx.consultation.generalAppearance = $event;\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(50, \"div\", 5)(51, \"div\", 6)(52, \"label\", 13);\n          i0.ɵɵtext(53, \"Body Temperature:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(54, \"input\", 14);\n          i0.ɵɵlistener(\"ngModelChange\", function AddConsultationComponent_Template_input_ngModelChange_54_listener($event) {\n            return ctx.consultation.temperature = $event;\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(55, \"div\", 5)(56, \"div\", 6)(57, \"label\", 15);\n          i0.ɵɵtext(58, \"Blood Pressure:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(59, \"input\", 16);\n          i0.ɵɵlistener(\"ngModelChange\", function AddConsultationComponent_Template_input_ngModelChange_59_listener($event) {\n            return ctx.consultation.bloodPressure = $event;\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(60, \"div\", 5)(61, \"div\", 6)(62, \"label\", 17);\n          i0.ɵɵtext(63, \"Breathing Pattern\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(64, \"input\", 18);\n          i0.ɵɵlistener(\"ngModelChange\", function AddConsultationComponent_Template_input_ngModelChange_64_listener($event) {\n            return ctx.consultation.breathingPattern = $event;\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(65, \"div\", 5)(66, \"div\", 6)(67, \"label\", 19);\n          i0.ɵɵtext(68, \"Pupil Reflex Condition:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(69, \"input\", 20);\n          i0.ɵɵlistener(\"ngModelChange\", function AddConsultationComponent_Template_input_ngModelChange_69_listener($event) {\n            return ctx.consultation.pupilReflexCondition = $event;\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(70, \"div\", 5)(71, \"div\", 6)(72, \"label\", 21);\n          i0.ɵɵtext(73, \"Nerve Reflex Condition:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(74, \"input\", 22);\n          i0.ɵɵlistener(\"ngModelChange\", function AddConsultationComponent_Template_input_ngModelChange_74_listener($event) {\n            return ctx.consultation.nerveReflexCondition = $event;\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(75, \"div\", 23)(76, \"label\", 24);\n          i0.ɵɵtext(77, \"Other:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(78, \"textarea\", 25);\n          i0.ɵɵlistener(\"ngModelChange\", function AddConsultationComponent_Template_textarea_ngModelChange_78_listener($event) {\n            return ctx.consultation.other = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(79, \"p\", 3);\n          i0.ɵɵtext(80, \"\\u00A0\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(81, \"h4\");\n          i0.ɵɵtext(82, \"Patient Symptoms\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(83, \"div\", 23)(84, \"label\", 26);\n          i0.ɵɵtext(85, \"Symptoms:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(86, \"textarea\", 27);\n          i0.ɵɵlistener(\"ngModelChange\", function AddConsultationComponent_Template_textarea_ngModelChange_86_listener($event) {\n            return ctx.consultation.patientSymptom = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(87, \"hr\");\n          i0.ɵɵelementStart(88, \"button\", 28);\n          i0.ɵɵlistener(\"click\", function AddConsultationComponent_Template_button_click_88_listener() {\n            return ctx.addConsultation();\n          });\n          i0.ɵɵtext(89, \"Submit\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(90, \"p\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(91, \"footer\", 29)(92, \"div\", 30);\n          i0.ɵɵtext(93, \" \\u00A9 2024 Built by: \");\n          i0.ɵɵelementStart(94, \"a\", 31);\n          i0.ɵɵtext(95, \"MDS02\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(13);\n          i0.ɵɵtextInterpolate1(\" \", ctx.aPhysician.physician_id, \"\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate2(\" Dr. \", ctx.aPhysician.physician_firstName, \" \", ctx.aPhysician.physician_lastName, \"\");\n          i0.ɵɵadvance(7);\n          i0.ɵɵtextInterpolate1(\" \", ctx.aPatient.patientId, \"\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate2(\" \", ctx.aPatient.firstName, \" \", ctx.aPatient.lastName, \"\");\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngModel\", ctx.consultation.height);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngModel\", ctx.consultation.weight);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngModel\", ctx.consultation.generalAppearance);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngModel\", ctx.consultation.temperature);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngModel\", ctx.consultation.bloodPressure);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngModel\", ctx.consultation.breathingPattern);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngModel\", ctx.consultation.pupilReflexCondition);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngModel\", ctx.consultation.nerveReflexCondition);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.consultation.other);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngModel\", ctx.consultation.patientSymptom);\n        }\n      },\n      dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel]\n    });\n  }\n  return AddConsultationComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}