{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/database.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport let UpdateConsultationComponent = /*#__PURE__*/(() => {\n  class UpdateConsultationComponent {\n    /**\n     * @constructor The constructor of this component has three dependencies: the DatabaseService, the ActivatedRoute, and the Router\n     * @param dbService Service used to fetch and manage data from the database\n     * @param router Service used for navigation between components/pages\n     * @param route Provides information about the current route in the application\n     */\n    constructor(dbService, router, route) {\n      this.dbService = dbService;\n      this.router = router;\n      this.route = route;\n      // Generate new consultation object\n      this.consultation = {\n        physicianId: \"\",\n        patientId: \"\",\n        consultationId: \"\",\n        other: \"\",\n        patientSymptom: \"\"\n      };\n      this.id = \"\";\n      this.patientDB = [];\n      this.aPatient = {};\n      this.consultationDB = [];\n      this.physicianDB = [];\n      this.aPhysician = {};\n      this.aConsultation = {};\n    }\n    /**\n     * @function ngOnInit fetches consultation, patient, and physician data, and retrieves records for the selected consultation\n     * @summary Fetches consultation, patient, and physician data, and retrieves records for the selected consultation\n     * @description Fetches consultation, patient, and physician data, and retrieves records for the selected consultation\n     */\n    ngOnInit() {\n      this.getconsultationId();\n      this.getConsultationRecord();\n      this.getPatientRecord();\n      this.getPhysicianRecord();\n    }\n    /**\n     * @function getconsultationId function fetch the consultation ID from the route\n     * @summary Fetch the consultation ID from the route for it to be access later\n     * @description Fetch the consultation ID from the route for it to be access later\n     */\n    getconsultationId() {\n      this.route.paramMap.subscribe(params => {\n        this.consultation.consultationId = params.get('consultationId');\n        console.log(\"Get consultation Id to update consultation: \", this.consultation.consultationId);\n      });\n    }\n    /**\n     * @function getConsultationRecord function fetch the consultation records from the MongoDB database\n     * @summary Fetch the consultation records from the MongoDB database using the consultation ID and store it in a variable to be access later\n     * @description Fetch the consultation records from the MongoDB database using the consultation ID and store it in a variable to be access later\n     */\n    getConsultationRecord() {\n      this.dbService.getConsultations().subscribe(consultationDB => {\n        console.log(\"Get consultation Id record\", this.consultation.consultationId);\n        for (let consultation of consultationDB) {\n          if (consultation.consultationId === this.consultation.consultationId) {\n            this.aConsultation = consultation;\n            console.log(\"consultation Record\", this.aConsultation);\n            // Updates the component’s patient fields with the corresponding values from this.aPatient to have it appear \n            //  automatically in the form.\n            this.consultation.other = this.aConsultation.other;\n            this.consultation.patientSymptom = this.aConsultation.patientSymptom;\n          }\n        }\n      });\n    }\n    /**\n     * @function getPatientRecord function fetch the Patient records from the MongoDB database\n     * @summary Fetch the Patient records from the MongoDB database using the consultation object and store it in a variable to be access later\n     * @description Fetch the Patient records from the MongoDB database using the consultation object and store it in a variable to be access later\n     */\n    getPatientRecord() {\n      this.dbService.getPatients().subscribe(patientDB => {\n        this.consultation.patientId = this.aConsultation.patientId;\n        console.log(\"Get Patient Id record\", this.consultation.patientId);\n        for (let patient of patientDB) {\n          if (patient.patientId === this.consultation.patientId) {\n            this.aPatient = patient;\n            console.log(\"Patient Record\", this.aPatient);\n          }\n        }\n      });\n    }\n    /**\n     * @function getPhysicianRecord function fetch the Physician records from the MongoDB database\n     * @summary Fetch the Physician records from the MongoDB database using the consultation object and store it in a variable to be access later\n     * @description Fetch the Physician records from the MongoDB database using the consultation object and store it in a variable to be access later\n     */\n    getPhysicianRecord() {\n      // Fetch physicians from database and format their names for the dropdown\n      this.dbService.getAllPhysician().subscribe(physicianDB => {\n        this.consultation.physicianId = this.aConsultation.physicianId;\n        for (let dr of physicianDB) {\n          if (dr.physician_id === this.consultation.physicianId) {\n            this.aPhysician = dr;\n            console.log(\"physician Record\", this.aPhysician);\n          }\n        }\n      });\n    }\n    /**\n     * @function sendUpdateConsultation Sends the updated consultation object to the backend via the DatabaseService, and navigates to the view-consultation page\n     * @description Sends the updated consultation object to the backend via the DatabaseService, and navigates to the view-consultation page\n     */\n    sendUpdateConsultation() {\n      console.log(\"Send consultation object for update\", this.consultation);\n      this.dbService.updateConsultation(this.consultation).subscribe({\n        next: result => {\n          this.router.navigate([\"/view-consultation\", this.consultation.consultationId]);\n        },\n        error: error => {\n          this.router.navigate([\"/invalid-data\"]);\n        }\n      });\n    }\n    static #_ = this.ɵfac = function UpdateConsultationComponent_Factory(t) {\n      return new (t || UpdateConsultationComponent)(i0.ɵɵdirectiveInject(i1.DatabaseService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UpdateConsultationComponent,\n      selectors: [[\"app-update-consultation\"]],\n      decls: 104,\n      vars: 16,\n      consts: [[1, \"row\", \"justify-content-center\"], [1, \"container\", 2, \"width\", \"1000px\", \"margin-bottom\", \"2rem\"], [1, \"card\"], [1, \"container\", 2, \"width\", \"95%\"], [\"align\", \"center\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"col-md-6\", \"mb-4\", \"pb-2\"], [\"data-mdb-input-init\", \"\", 1, \"form-outline\"], [\"for\", \"height\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"patientHeight\", \"disabled\", \"\", 1, \"form-control\", 3, \"placeholder\"], [\"for\", \"weight\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"patientWeight\", \"disabled\", \"\", 1, \"form-control\", 3, \"placeholder\"], [\"for\", \"generalAppearance\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"patientGeneralAppearance\", \"disabled\", \"\", 1, \"form-control\", 3, \"placeholder\"], [\"for\", \"bodyTemperature\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"bodyTemperature\", \"disabled\", \"\", 1, \"form-control\", 3, \"placeholder\"], [\"for\", \"bloodPressure\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"patientBloodPressure\", \"disabled\", \"\", 1, \"form-control\", 3, \"placeholder\"], [\"for\", \"breathingPattern\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"patientBreathingPattern\", \"disabled\", \"\", 1, \"form-control\", 3, \"placeholder\"], [\"for\", \"pupilReflexCondition\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"patientPupilReflexCondition\", \"disabled\", \"\", 1, \"form-control\", 3, \"placeholder\"], [\"for\", \"nerveReflexCondition\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"patientNerveReflexCondition\", \"disabled\", \"\", 1, \"form-control\", 3, \"placeholder\"], [1, \"mb-3\"], [\"for\", \"description\", 1, \"form-label\"], [\"name\", \"patientOther\", \"rows\", \"3\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"Symptoms\", 1, \"form-label\"], [\"name\", \"patientSymptom\", \"rows\", \"3\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"bg-dark\", \"text-center\", \"text-white\"], [1, \"text-center\", \"p-3\", 2, \"background-color\", \"rgba(0, 0, 0, 0.2)\"], [1, \"text-white\"]],\n      template: function UpdateConsultationComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h3\", 4);\n          i0.ɵɵtext(5, \"\\u00A0\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"h1\", 4);\n          i0.ɵɵtext(7, \"Update Medical Consultation\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 5)(9, \"h3\", 4);\n          i0.ɵɵtext(10, \"\\u00A0\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\", 6)(12, \"div\", 3)(13, \"h4\");\n          i0.ɵɵtext(14, \"Physician in charge\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"hr\");\n          i0.ɵɵelementStart(16, \"p\")(17, \"strong\");\n          i0.ɵɵtext(18, \"Physician ID:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"p\")(21, \"strong\");\n          i0.ɵɵtext(22, \"Physician Name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(23);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(24, \"div\", 6)(25, \"div\", 3)(26, \"h4\");\n          i0.ɵɵtext(27, \"Patient Information\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(28, \"hr\");\n          i0.ɵɵelementStart(29, \"p\")(30, \"strong\");\n          i0.ɵɵtext(31, \"Patient ID:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(32);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(33, \"p\")(34, \"strong\");\n          i0.ɵɵtext(35, \"Patient Name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(36);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(37, \"main\")(38, \"div\", 3);\n          i0.ɵɵelement(39, \"hr\");\n          i0.ɵɵelementStart(40, \"h4\");\n          i0.ɵɵtext(41, \"General Physical Examination\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(42, \"div\", 5)(43, \"div\", 7)(44, \"div\", 8)(45, \"label\", 9);\n          i0.ɵɵtext(46, \"Height:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(47, \"input\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(48, \"div\", 7)(49, \"div\", 8)(50, \"label\", 11);\n          i0.ɵɵtext(51, \"Weight:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(52, \"input\", 12);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(53, \"div\", 7)(54, \"div\", 8)(55, \"label\", 13);\n          i0.ɵɵtext(56, \"General Appearance:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(57, \"input\", 14);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(58, \"div\", 7)(59, \"div\", 8)(60, \"label\", 15);\n          i0.ɵɵtext(61, \"Body Temperature:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(62, \"input\", 16);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(63, \"div\", 7)(64, \"div\", 8)(65, \"label\", 17);\n          i0.ɵɵtext(66, \"Blood Pressure:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(67, \"input\", 18);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(68, \"div\", 7)(69, \"div\", 8)(70, \"label\", 19);\n          i0.ɵɵtext(71, \"Breathing Pattern\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(72, \"input\", 20);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(73, \"div\", 7)(74, \"div\", 8)(75, \"label\", 21);\n          i0.ɵɵtext(76, \"Pupil Reflex Condition:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(77, \"input\", 22);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(78, \"div\", 7)(79, \"div\", 8)(80, \"label\", 23);\n          i0.ɵɵtext(81, \"Nerve Reflex Condition:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(82, \"input\", 24);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(83, \"div\", 25)(84, \"label\", 26);\n          i0.ɵɵtext(85, \"Other:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(86, \"textarea\", 27);\n          i0.ɵɵlistener(\"ngModelChange\", function UpdateConsultationComponent_Template_textarea_ngModelChange_86_listener($event) {\n            return ctx.consultation.other = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(87, \"p\", 4);\n          i0.ɵɵtext(88, \"\\u00A0\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(89, \"h4\");\n          i0.ɵɵtext(90, \"Patient Symptoms\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(91, \"div\", 25)(92, \"label\", 28);\n          i0.ɵɵtext(93, \"Symptoms:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(94, \"textarea\", 29);\n          i0.ɵɵlistener(\"ngModelChange\", function UpdateConsultationComponent_Template_textarea_ngModelChange_94_listener($event) {\n            return ctx.consultation.patientSymptom = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(95, \"hr\");\n          i0.ɵɵelementStart(96, \"button\", 30);\n          i0.ɵɵlistener(\"click\", function UpdateConsultationComponent_Template_button_click_96_listener() {\n            return ctx.sendUpdateConsultation();\n          });\n          i0.ɵɵtext(97, \"Submit\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(98, \"p\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(99, \"footer\", 31)(100, \"div\", 32);\n          i0.ɵɵtext(101, \" \\u00A9 2024 Built by: \");\n          i0.ɵɵelementStart(102, \"a\", 33);\n          i0.ɵɵtext(103, \"MDS02\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(19);\n          i0.ɵɵtextInterpolate1(\" \", ctx.aPhysician.physician_id, \"\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate2(\" Dr. \", ctx.aPhysician.physician_firstName, \" \", ctx.aPhysician.physician_lastName, \"\");\n          i0.ɵɵadvance(9);\n          i0.ɵɵtextInterpolate1(\" \", ctx.aPatient.patientId, \"\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate2(\" \", ctx.aPatient.firstName, \" \", ctx.aPatient.lastName, \"\");\n          i0.ɵɵadvance(11);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.aConsultation.height);\n          i0.ɵɵadvance(5);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.aConsultation.weight);\n          i0.ɵɵadvance(5);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.aConsultation.generalAppearance);\n          i0.ɵɵadvance(5);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.aConsultation.temperature);\n          i0.ɵɵadvance(5);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.aConsultation.bloodPressure);\n          i0.ɵɵadvance(5);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.aConsultation.breathingPattern);\n          i0.ɵɵadvance(5);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.aConsultation.pupilReflexCondition);\n          i0.ɵɵadvance(5);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.aConsultation.nerveReflexCondition);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.consultation.other);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngModel\", ctx.consultation.patientSymptom);\n        }\n      },\n      dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel]\n    });\n  }\n  return UpdateConsultationComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}