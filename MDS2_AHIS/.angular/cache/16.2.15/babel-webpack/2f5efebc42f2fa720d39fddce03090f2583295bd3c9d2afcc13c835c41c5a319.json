{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/database.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../../pipes/to-upper-case.pipe\";\nfunction UpdatePrescriptionComponent_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const doctor_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", doctor_r2.physician_id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", doctor_r2.name, \" \");\n  }\n}\nfunction UpdatePrescriptionComponent_tr_50_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 19);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"toUpperCase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"toUpperCase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function UpdatePrescriptionComponent_tr_50_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const pre_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.selectPrescriptionButton(pre_r3.prescription_id));\n    });\n    i0.ɵɵtext(11, \"Update\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"td\")(13, \"a\", 21);\n    i0.ɵɵtext(14, \"Display\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const pre_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(pre_r3.prescription_id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 4, pre_r3.prescription_name));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 6, pre_r3.physician_id));\n    i0.ɵɵadvance(6);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/display-prescription/\", pre_r3.prescription_id, \"\");\n  }\n}\nexport let UpdatePrescriptionComponent = /*#__PURE__*/(() => {\n  class UpdatePrescriptionComponent {\n    /**\n     * @constructor The constructor of this component has three dependencies: the DatabaseService, the ActivatedRoute, and the Router\n     * @param dbService Service used to fetch and manage data from the database\n     * @param router Service used for navigation between components/pages\n     * @param route Provides information about the current route in the application\n     */\n    constructor(dbService, route, router) {\n      this.dbService = dbService;\n      this.route = route;\n      this.router = router;\n      this.imageUrl = '../assets/images/banner-sample.png';\n      this.prescription_id = \"\";\n      // Database\n      this.prescriptionDB = [];\n      this.patientDB = [];\n      this.medicationDB = [];\n      this.physicianDB = [];\n      // Details that can be updated\n      this.newPrescription_specialinstructions = \"\";\n      this.newPrescription_name = \"\";\n      this.newPrescription_freqency = 0;\n      this.newPrescription_dosage = 0;\n      this.newPhysicianID = \"\";\n      this.prescription_id = this.route.snapshot.paramMap.get('prescription_id');\n      console.log(\"prescription id: \", this.prescription_id);\n    }\n    /**\n     * @function ngOnInit runs when the component is initiated\n     * @description Loads the prescription, patient, medication, and physician databases for use in the component\n     */\n    ngOnInit() {\n      this.dbService.getAllPrescription().subscribe(data => {\n        this.prescriptionDB = data;\n      });\n      console.log(this.prescriptionDB);\n      // Fetch physician from database and format their names for the dropdown\n      this.dbService.getAllPhysician().subscribe(data => {\n        this.physicianDB = data.map(doctor => ({\n          physician_id: doctor.physician_id,\n          name: `${doctor.physician_id} - ${doctor.physician_firstName} ${doctor.physician_lastName}`\n        }));\n      });\n    }\n    /**\n     * @function selectPrescriptionButton Navigates the user to the Display prescription page, passing the prescription ID as a parameter\n     * @description Navigates the user to the Display prescription page, passing the prescription ID as a parameter\n     * @param prescription_id The ID of the selected prescription\n     */\n    selectPrescriptionButton(prescription_id) {\n      this.prescription_id = prescription_id;\n    }\n    /**\n     * @function updateButton Sends the updated prescription details to the DatabaseService for updating the database\n     * @description Sends the updated prescription details to the DatabaseService for updating the database\n     * @summary Creates an object with the prescription_id with the updated details and passes it to the update service\n     */\n    updateButton() {\n      const obj = {\n        prescription_id: this.prescription_id,\n        prescription_specialinstructions: this.newPrescription_specialinstructions,\n        prescription_freqency: this.newPrescription_freqency,\n        prescription_dosage: this.newPrescription_dosage,\n        physician_id: this.newPhysicianID\n      };\n      this.dbService.updatePrescription(obj).subscribe({\n        next: result => {\n          // Successful response\n          console.log(obj);\n          this.dbService.getAllPrescription().subscribe(data => {\n            this.prescriptionDB = data;\n          });\n        },\n        error: error => {\n          // Error handling\n          console.log(obj);\n          console.error('Error:', error);\n          this.router.navigate(['/invalid-data']);\n        }\n      });\n    }\n    static #_ = this.ɵfac = function UpdatePrescriptionComponent_Factory(t) {\n      return new (t || UpdatePrescriptionComponent)(i0.ɵɵdirectiveInject(i1.DatabaseService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UpdatePrescriptionComponent,\n      selectors: [[\"app-update-prescription\"]],\n      decls: 56,\n      vars: 7,\n      consts: [[1, \"d-flex\", \"justify-content-center\", \"mt-4\"], [1, \"card\", 2, \"width\", \"72rem\", \"margin-bottom\", \"2rem\"], [1, \"card-body\"], [1, \"card-title\", \"text-center\"], [1, \"form-group\"], [\"for\", \"name\"], [\"name\", \"id\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"name\", \"id\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-3\", 3, \"click\"], [1, \"row\", \"row-cols-1\", \"g-3\"], [1, \"col\"], [1, \"table\", \"table-hover\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-dark\", \"text-center\", \"text-white\"], [1, \"text-center\", \"p-3\", 2, \"background-color\", \"rgba(0, 0, 0, 0.2)\"], [1, \"text-white\"], [3, \"value\"], [\"scope\", \"row\"], [1, \"btn\", \"btn-primary\", 2, \"background-color\", \"cadetblue\", 3, \"click\"], [1, \"btn\", \"btn-primary\", 3, \"routerLink\"]],\n      template: function UpdatePrescriptionComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n          i0.ɵɵtext(4, \"Select one of the Prescriptions\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n          i0.ɵɵtext(7, \"Selected Prescription ID:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"h3\");\n          i0.ɵɵtext(9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 2)(11, \"div\", 4)(12, \"label\", 5);\n          i0.ɵɵtext(13, \"Issued By:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"select\", 6);\n          i0.ɵɵlistener(\"ngModelChange\", function UpdatePrescriptionComponent_Template_select_ngModelChange_14_listener($event) {\n            return ctx.newPhysicianID = $event;\n          });\n          i0.ɵɵtemplate(15, UpdatePrescriptionComponent_option_15_Template, 2, 2, \"option\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(16, \"p\");\n          i0.ɵɵelementStart(17, \"label\", 5);\n          i0.ɵɵtext(18, \"New Prescription Dosage:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"input\", 8);\n          i0.ɵɵlistener(\"ngModelChange\", function UpdatePrescriptionComponent_Template_input_ngModelChange_19_listener($event) {\n            return ctx.newPrescription_dosage = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"p\");\n          i0.ɵɵelementStart(21, \"label\", 5);\n          i0.ɵɵtext(22, \"New Medication Consumption Frequency:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"input\", 8);\n          i0.ɵɵlistener(\"ngModelChange\", function UpdatePrescriptionComponent_Template_input_ngModelChange_23_listener($event) {\n            return ctx.newPrescription_freqency = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(24, \"p\");\n          i0.ɵɵelementStart(25, \"label\", 5);\n          i0.ɵɵtext(26, \"New Prescription Special Instructions:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"input\", 8);\n          i0.ɵɵlistener(\"ngModelChange\", function UpdatePrescriptionComponent_Template_input_ngModelChange_27_listener($event) {\n            return ctx.newPrescription_specialinstructions = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(28, \"p\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(29, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function UpdatePrescriptionComponent_Template_button_click_29_listener() {\n            return ctx.updateButton();\n          });\n          i0.ɵɵtext(30, \"Update\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(31, \"main\", 0)(32, \"div\", 1)(33, \"div\", 2)(34, \"div\", 10)(35, \"div\", 11)(36, \"table\", 12)(37, \"thead\")(38, \"tr\")(39, \"th\", 13);\n          i0.ɵɵtext(40, \"ID\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(41, \"th\", 13);\n          i0.ɵɵtext(42, \"Prescription Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(43, \"th\", 13);\n          i0.ɵɵtext(44, \"Physician-in-charge\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(45, \"th\", 13);\n          i0.ɵɵtext(46, \"Update\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(47, \"th\", 13);\n          i0.ɵɵtext(48, \"Action\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(49, \"tbody\");\n          i0.ɵɵtemplate(50, UpdatePrescriptionComponent_tr_50_Template, 15, 8, \"tr\", 14);\n          i0.ɵɵelementEnd()()()()()()();\n          i0.ɵɵelementStart(51, \"footer\", 15)(52, \"div\", 16);\n          i0.ɵɵtext(53, \" \\u00A9 2024 Built by: \");\n          i0.ɵɵelementStart(54, \"a\", 17);\n          i0.ɵɵtext(55, \"MDS02\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵtextInterpolate(ctx.prescription_id);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngModel\", ctx.newPhysicianID);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.physicianDB);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.newPrescription_dosage);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.newPrescription_freqency);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.newPrescription_specialinstructions);\n          i0.ɵɵadvance(23);\n          i0.ɵɵproperty(\"ngForOf\", ctx.prescriptionDB);\n        }\n      },\n      dependencies: [i3.NgForOf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.RequiredValidator, i4.NgModel, i2.RouterLink, i5.ToUpperCasePipe]\n    });\n  }\n  return UpdatePrescriptionComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}